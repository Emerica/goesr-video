# AUTOMATIC RESTART OF SERVICES
# GOES Compositor (layers R/G/B and creates a large and a small JPEG
*/5 * * * *    bnitkin  pidof -x GOES16.sci.py >/dev/null || /home/bnitkin/GOES16.sci.py >> /home/bnitkin/log.txt 2>&1
# HTTP Server: Provides both video and still versions of the page with automatic refresh
*/5 * * * *    root     pidof -x goesServer.py >/dev/null || (cd /home/bnitkin; /home/bnitkin/goesServer.py >> /home/bnitkin/server.txt 2>&1)
# Ensure that the compositor is running at highest priority (if it misses an interval, we're not getting it back).
0 0 * * *      root     renice -n -20 -p `pidof -x GOES16.sci.py`

# Remove jpg files in /home/bnitkin/goesr that are more than a week old.
# disabled pending disk usage analysis.
#15 3 * * *   bnitkin  find /home/bnitkin/goesr -ctime +80 -iname '*.jpg' -exec rm {} \; >> /home/bnitkin/find.txt 2>&1

# VIDEO GENERATION
# Use Make to automatically detect when files change. Half-hour updates reduce CPU usage,
# and live video is less important than keeping the compositor happy.
# Staggering helps balance CPU load (:00/:30)
*/30 * * * *   bnitkin             ionice -c3 nice -n20 /home/bnitkin/videogen.py day     >> /home/bnitkin/video.txt 2>&1
# Staggering helps balance CPU load (:15/:45)
*/30 * * * *   bnitkin  sleep 900; ionice -c3 nice -n20 /home/bnitkin/videogen.py two-day >> /home/bnitkin/video.txt 2>&1
# Rebuild longer videos less often.
# Monthly and annual videos are one frame per day, so they're not enormous.
# 16:40 UTC is local noon for GOES-east. I've added 20 minutes to compensate for processing delays.
33  6 * * *    bnitkin             ionice -c3 nice -n20 /home/bnitkin/videogen.py week   >> /home/bnitkin/video.txt 2>&1
00  17 * * *   bnitkin             ionice -c3 nice -n20 /home/bnitkin/videogen.py month  >> /home/bnitkin/video.txt 2>&1
00  17 * * thu bnitkin             ionice -c3 nice -n20 /home/bnitkin/videogen.py year   >> /home/bnitkin/video.txt 2>&1
